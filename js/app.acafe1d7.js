(()=>{var t={20008:(t,e,n)=>{"use strict";n(18964);var a=n(61957),i=n(71947),s=n(60499),u=n(59835);function r(t,e,n,a,i,s){const r=(0,u.up)("router-view");return(0,u.wg)(),(0,u.j4)(r)}const p=(0,u.aZ)({name:"App"});var o=n(11639);const l=(0,o.Z)(p,[["render",r]]),y=l;var m=n(23340),c=n(81809);const d=(0,m.h)((()=>{const t=(0,c.WB)();return t}));var f=n(28339);const b=[{path:"/",component:()=>Promise.all([n.e(736),n.e(984)]).then(n.bind(n,27984)),children:[{path:"",component:()=>Promise.all([n.e(736),n.e(557)]).then(n.bind(n,66557))},{name:"DashBoard",path:"/dash-board",component:()=>Promise.all([n.e(736),n.e(672)]).then(n.bind(n,61672))}]},{path:"/:catchAll(.*)*",component:()=>Promise.all([n.e(736),n.e(160)]).then(n.bind(n,62160))}],T=b,_=(0,m.BC)((function(){const t=f.PO,e=(0,f.p7)({scrollBehavior:()=>({left:0,top:0}),routes:T,history:t("/")});return e}));async function w(t,e){const n=t(y);n.use(i.Z,e);const a="function"===typeof d?await d({}):d;n.use(a);const u=(0,s.Xl)("function"===typeof _?await _({store:a}):_);return a.use((({store:t})=>{t.router=u})),{app:n,store:a,router:u}}var g=n(4328),h=n(26950);const v={config:{dark:!0,Loading:{spinner:{name:"QSpinnerGears",props:{size:{type:[null,null],default:"1em"}}},color:"primary"}},plugins:{Notify:g.Z,Loading:h.Z}};var M=n(17779);const x="/";async function k({app:t,router:e,store:n},a){let i=!1;const s=t=>{try{return e.resolve(t).href}catch(n){}return Object(t)===t?null:t},u=t=>{if(i=!0,"string"===typeof t&&/^https?:\/\//.test(t))return void(window.location.href=t);const e=s(t);null!==e&&(window.location.href=e)},r=window.location.href.replace(window.location.origin,"");for(let o=0;!1===i&&o<a.length;o++)try{await a[o]({app:t,router:e,store:n,ssrContext:null,redirect:u,urlPath:r,publicPath:x})}catch(p){return p&&p.url?void u(p.url):void M.error("[Quasar] boot error:",p)}!0!==i&&(t.use(e),t.mount("#q-app"))}w(a.ri,v).then((t=>{const[e,a]=void 0!==Promise.allSettled?["allSettled",t=>t.map((t=>{if("rejected"!==t.status)return t.value.default;M.error("[Quasar] boot error:",t.reason)}))]:["all",t=>t.map((t=>t.default))];return Promise[e]([Promise.resolve().then(n.bind(n,65267)),Promise.resolve().then(n.bind(n,1958)),Promise.resolve().then(n.bind(n,91569))]).then((e=>{const n=a(e).filter((t=>"function"===typeof t));k(t,n)}))}))},91569:(t,e,n)=>{"use strict";n.r(e),n.d(e,{api:()=>u,default:()=>r});var a=n(23340),i=n(39981),s=n.n(i);const u=s().create({baseURL:"https://api.example.com"}),r=(0,a.xr)((({app:t})=>{t.config.globalProperties.$axios=s(),t.config.globalProperties.$api=u}))},1958:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>o});var a=n(23340),i=n(27712);const s={logo_name:"RobotXEN",create_logo:"XEN Auto Minter",create_task_btn:"Create",task_logs:"Dashboard",create_name:"Create",faq_name:"F.A.Q",casting_set:"Mint Setting",casting_count:"预计铸造账户数量",casting_list_name:"Mint Details",casting_modal_name:"Minting Details",casting_count_faq:"铸造账户数量的提示文字",casting_day:"Term, Days",casting_day_faq:"Locking days to claim XEN tokens.",casting_amount:"Minting Budget",casting_input_amount:"Minting Budget",casting_input_amount_faq:"Deposit for the current minting task. You can stop the minting task and withdraw the remaining balance anytime",casting_total_amount:"Total",auto_task_amount:"RobotXEN Fee",gas_set:"GAS Setting",gas_min_gas:"GAS tolerance",gas_min_gas_faq:"Set a tolerance value for the gas fee. Once the gas fee exceeds the tolerance value, RobotXEN will pause minting tasks until the gas fee equals to or is less than this tolerance value.",task_info:"Task Overview",insufficient_balance:"Insufficient balance",run_task:"Running",close_task:"Finished",no_task:"No Task",day_word:"Day",task_balance:"Task balance",gas_tolerance:"GAS tolerance",minted_accounts:"Minted accounts",mint_cost:"Mint cost (AVG)",mint_cost_uint:"accounts",claimable_accounts:"Claimable",mint_task_no_start:"No mint yet",claimed_accounts:"Claimed accounts",info_word:"Details",claim_task:"Auto-Claim Task",create_claim_task_title:"Auto-Claim Task",claim_set:"Claim Setting",claim_target_value:"Claim Budget",claim_gas_set:"GAS Setting",claim_task_tips:"Create an automatic claiming task for the current minting task. You can create a claiming task anytime as needed.",next_word:"Next",reload_date:"Next update in {time}",filter_page:"Filter",filter_all:"All",filter_available:"Available",filter_received:"Claimed",no_received:"Unclaimed",accounts_number:"Number of accounts",use_claim_date:"Date",accounts_amount:"Estimated amount",claimed_status:"Status",available_word:"Claimable",receive_word:"Claim",no_available_word:"Pending",mint_pending_claim:"This minting task has been completed.",mint_stop:"Minting task finished",mint_working:"Working",stop_mint:"STOP",submit_word:"Confirm",close_edl_gas:"Close",modify_gas:"Modify",claim_task_com:"All XEN Claimed",claim_working:"Working",claim_stopped:"Claim task finished",stop_claim_task:"Stop",claim_cost_avg:"Claim cost (AVG)",stop_task_title:"Stop",stop_task_tips:"Are you sure to stop this task？",close_word:"Close",confirm_stop:"Confirm",claim_task_amount:"Confirm",claim_task_pre_count:"Estimated amount",create_claim_btn:"CREATE",successful_operation:"Successful operation！",casting_modal_page:"Total {pages}",page_word:"page",go_page:"GO",go_last_work_page:"Back to last work",claim_task_title:"Claim Details",accounts_word:"accounts",telegram:"http://t.me/robotxen_com",what_is_robotXEN:"What is RobotXEN?",what_is_robotXEN_text:"RobotXEN is a decentralized tool that automatically batch mints XEN tokens. With a simple configuration in the tool, you can easily achieve fully automated XEN minting and claiming.",is_robot_xen_open_tool:"Is RobotXEN an open-source tool?",is_robot_xen_open_tool_text:"RobotXEN is an open-source tool and all smart contracts are verified on block explorer.",what_robot_xen_fee:"What's RobotXEN fee?",what_robot_xen_fee_text:"It charges a fixed one-time fee when you create a new auto task. You can see the specific fee in the dashboard. Currently, the OKC chain is permanently free to use.",do_i_need_multiple_wallets:"Do I need multiple wallets?",do_i_need_multiple_wallets_text:"No, you only need 1 wallet to connect Robotxen because the logic is all inside the contract.",what_is_gas_tolerance:"What is gas tolerance?",what_is_gas_tolerance_text:"Gas tolerance means the maximum allowable gas fee on the blockchain. For example, if you set the gas tolerance to 100 gwei and the gas fee on the blockchain is 60 gwei, RobotXEN will use 60 gwei to batch mint XEN tokens. If the gas fee on the blockchain exceeds 100 gwei, the tool will pause the minting task until the gas fee goes down to 100 gwei or below.",how_should_i_claim:"How should I claim if the website is down or closed?",ok_1:'Visit <a target="_blank" class="text-blue-500" href="https://okx.robotxen.com/"> here</a> to check your previous tasks.',how_should_i_claim_text:"Decentralized front end page:<br/>We additionally deploy a decentralized website frontend, which is stored in ifps and cannot be down or closed. You could still claim your XEN by using this front-end page.<a class='text-blue-500 font-bold' target='_blank'  href='https://robotxen.4everland.app/'>Visit Here</a><br/>Block Explorer:<br/>If you're good at coding, you also could withdraw all of your tokens from a Block Explorer."},u={logo_name:"RobotXEN",create_logo:"XEN自动铸造",create_task_btn:"创建任务",task_logs:"任务记录",create_name:"创建任务",faq_name:"帮助中心",casting_set:"铸造设置",casting_count:"预计铸造账户数量",casting_list_name:"铸造详情",casting_modal_name:"铸造记录",casting_count_faq:"本次铸币任务的预算总金额，中途可随时停止并取出剩余金额。",casting_day:"锁定天数",casting_day_faq:"锁定天数的提示文字",casting_amount:"铸造成本",casting_input_amount:"铸造预算",casting_input_amount_faq:"本次铸币任务的预算总金额，中途可随时停止并取出剩余金额。",casting_total_amount:"总计",auto_task_amount:"RobotXEN费用",gas_set:"GAS设置",gas_min_gas:"容忍GAS",gas_min_gas_faq:"设置可容忍费用。当区块网络gas超过该值时，工具将暂停铸造任务直至gas再次小于该数值。",task_info:"任务概览",insufficient_balance:"余额不足",run_task:"运行中",close_task:"已关闭",no_task:"暂时还没有任务",day_word:"天",task_balance:"任务余额",gas_tolerance:"容忍GAS",minted_accounts:"已铸造账户",mint_cost:"铸造成本（平均）",mint_cost_uint:"个账户",claimable_accounts:"可领取账户",mint_task_no_start:"尚未开始铸造",claimed_accounts:"已领取账户",info_word:"详情",claim_task:"领取任务",create_claim_task_title:"自动领取任务",claim_set:"领取设置",claim_target_value:"领取预算",claim_account_set:"领取账户数量",claim_gas_set:"Gas设置",claim_task_tips:"点击下方按钮创建一个领取任务，它将在账户可以领取的时候为您自动领取账户（您可以在任何时间创建它）。",next_word:"下一步",reload_date:"任务将在 {time} 秒后刷新",filter_page:"筛选当前页",filter_all:"所有",filter_available:"可领取",filter_received:"已领取",no_received:"未领取",accounts_number:"账户数量",use_claim_date:"可领取日期",accounts_amount:"账户价值",claimed_status:"领取状态",available_word:"可领取",receive_word:"领取",no_available_word:"不可领取",mint_pending_claim:"铸造任务已完成",mint_stop:"任务已完成",mint_working:"正在为您铸造账户",stop_mint:"停止铸造",submit_word:"提交",close_edl_gas:"关闭",modify_gas:"修改",claim_task_com:"所有XEN已经领完了",claim_working:"正在为您领取XEN",claim_stopped:"当前领取任务已结束",stop_claim_task:"停止领取",claim_cost_avg:"领取成本（平均）",stop_task_title:"停止任务",stop_task_tips:"该操作将彻底停止任务，是否确认？",close_word:"关闭",confirm_stop:"确认停止",claim_task_amount:"领取成本",claim_task_pre_count:"预估领取数量",create_claim_btn:"创建领取任务",successful_operation:"操作成功！",casting_modal_page:"共计{pages}页，当前第",page_word:"页",go_page:"前往",claim_task_title:"创建领取任务",go_last_work_page:"跳转到最后工作页面？",accounts_word:"个账户",ok_1:'<a target="_blank" class="text-blue-500" href="https://okx.robotxen.com/">访问此处</a>查看您之前的任务。',telegram:"http://t.me/robot_xen",what_is_robotXEN:"什么是机器XEN？",what_is_robotXEN_text:"机器XEN是一款100%去中心化的自动批量铸造XEN的工具。用户只需要简单的设置即可实现全自动铸造/领取模式。",is_robot_xen_open_tool:"合约开源吗？",is_robot_xen_open_tool_text:"RobotXEN 是一个开源工具，所有智能合约都在区块浏览器上进行了验证。",what_robot_xen_fee:"RobotXEN 费用是多少？",what_robot_xen_fee_text:"机器XEN会在不同链中实行不同的收费标准。每次创建一个新的铸造/领取任务，会支付一笔固定的费用，您可以在主页“费用”栏中查询。目前OKC链永久免费使用。",do_i_need_multiple_wallets:"我需要多个钱包吗？",do_i_need_multiple_wallets_text:"不需要，你只需要 1 个钱包就可以无限铸造，因为逻辑都在合约里面。",what_is_gas_tolerance:"如何理解“忍受gas”？",what_is_gas_tolerance_text:"可忍受gas指你对当前网络gas的最大容忍度。\n举例，你设置的可忍受gas是100 gwei，当前网络为60 gwei，系统将会按照60 gwei标准进行批量铸币。但当网络gas超过100 gwei时，系统将暂停铸币工作直至gas再次低至100 gwei。",how_should_i_claim:"如果网站宕机或关闭，我应该如何领取XEN？",how_should_i_claim_text:"去中心化前端页面：<br/>我们另外部署了一个去中心化的网站前端，它存储在 ifps 中，无法关闭。 即使RobotXEN关闭，您仍然可以使用此前端页面来领取您的 XEN。<a class='text-blue-500 font-bold' target='_blank'  href='https://robotxen.4everland.app/'>点此访问</a> <br/>区块浏览器：<br/>如果你是开发者，你也可以从 Block Explorer 中提取你所有的代币。"},r={"en-US":s,"zh-CN":u};var p=n(63703);const o=(0,a.xr)((({app:t})=>{const e=p.Z.getItem("language"),n=(0,i.o)({locale:e||"en-US",globalInjection:!0,messages:r});t.use(n)}))},65267:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>s});var a=n(23340),i=n(37804);const s=(0,a.xr)((async()=>{const t=(0,i.q)();await t.linkWallet()}))},37804:(t,e,n)=>{"use strict";n.d(e,{q:()=>r});var a=n(81809),i=n(34080),s=n(39447),u=n(63703);const r=(0,a.Q_)("appStore",{state:function(){const t=parseInt(u.Z.getItem("chain"));let e=i.Uw[0];return i.Uw.forEach((function(n){t===n.chainId&&(e=n)})),{network:e,link:!1,userAddStr:"--",userAdd:"",web3Modal:void 0,provider:void 0,netErr:!1,dApp:void 0,mintPreGas:void 0,claimPre:void 0,signer:void 0,factoryApp:void 0,rewardsApp:void 0,xenApp:void 0,balance:{str:"--.--",big:s._Y},joinFee:{str:0,big:void 0},gas:void 0}},getters:{},actions:{linkWallet:function(){return(0,i.gd)()},disconnect:async function(){this.$reset(),(0,i.oh)().then((function(t){t.clearCachedProvider()}))},changeNetwork:async function(t){await(0,i.Bv)(t)}}})},99778:(t,e,n)=>{"use strict";n.d(e,{iq:()=>c,ZS:()=>b,Ro:()=>f,pp:()=>m,l6:()=>d});const a=[{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"mintId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"claimId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"batchId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"gasConsumed",type:"uint256"},{indexed:!1,internalType:"address",name:"bot",type:"address"}],name:"Claim",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"mintId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"batchId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"gasConsumed",type:"uint256"},{indexed:!1,internalType:"address",name:"bot",type:"address"}],name:"Mint",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"bot",type:"address"},{indexed:!1,internalType:"uint256",name:"startValue",type:"uint256"}],name:"SetBot",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"mintId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"claimId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maxGsPrice",type:"uint256"}],name:"SetClaimMaxGasPrice",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"joinFee",type:"uint256"}],name:"SetJoinFee",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"minGasPrice",type:"uint256"}],name:"SetMinGasPrice",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"mintId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maxGsPrice",type:"uint256"}],name:"SetMintMaxGasPrice",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"mintId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"claimId",type:"uint256"}],name:"StartClaimTask",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"member",type:"address"},{indexed:!1,internalType:"uint256",name:"mintId",type:"uint256"}],name:"StartMintTask",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"mintId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"claimId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"valueLeft",type:"uint256"}],name:"StopClaimTask",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"mintId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"valueLeft",type:"uint256"}],name:"StopMintTask",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"fee",type:"uint256"}],name:"WithdrawJoinFee",type:"event"},{inputs:[],name:"COUNT_PER_BATCH",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"GAS_USED_PER_BATCH_CLAIM",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"GAS_USED_PER_BATCH_MINT",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"mintId",type:"uint256"},{internalType:"uint256",name:"batchId",type:"uint256"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"claimInfo",outputs:[{internalType:"uint256",name:"mintId",type:"uint256"},{internalType:"address",name:"member",type:"address"},{internalType:"uint256",name:"maxGasPrice",type:"uint256"},{internalType:"uint256",name:"targetValue",type:"uint256"},{internalType:"uint256",name:"maxGasConsumedPerBatchClaim",type:"uint256"},{internalType:"bool",name:"stopped",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"claimResult",outputs:[{internalType:"uint256",name:"gasConsumed",type:"uint256"},{internalType:"uint256",name:"accountsClaimed",type:"uint256"},{internalType:"uint256",name:"valueLeft",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"claimedAccounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"mintId",type:"uint256"},{internalType:"uint256",name:"batchId",type:"uint256"}],name:"getBatchInfo",outputs:[{components:[{internalType:"uint256",name:"batchId",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"},{internalType:"uint256",name:"unlockTime",type:"uint256"},{internalType:"bool",name:"claimed",type:"bool"}],internalType:"struct FactoryType.BatchInfo",name:"info",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"mintId",type:"uint256"}],name:"getBatchInfos",outputs:[{components:[{internalType:"uint256",name:"batchId",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"},{internalType:"uint256",name:"unlockTime",type:"uint256"},{internalType:"bool",name:"claimed",type:"bool"}],internalType:"struct FactoryType.BatchInfo[]",name:"infos",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"mintId",type:"uint256"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getBatchInfosByIndex",outputs:[{internalType:"uint256",name:"totalCount",type:"uint256"},{components:[{internalType:"uint256",name:"batchId",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"},{internalType:"uint256",name:"unlockTime",type:"uint256"},{internalType:"bool",name:"claimed",type:"bool"}],internalType:"struct FactoryType.BatchInfo[]",name:"infos",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"member",type:"address"}],name:"getMemberMultiClaimInfo",outputs:[{components:[{internalType:"uint256",name:"claimId",type:"uint256"},{components:[{internalType:"uint256",name:"mintId",type:"uint256"},{internalType:"address",name:"member",type:"address"},{internalType:"uint256",name:"maxGasPrice",type:"uint256"},{internalType:"uint256",name:"targetValue",type:"uint256"},{internalType:"uint256",name:"maxGasConsumedPerBatchClaim",type:"uint256"},{internalType:"bool",name:"stopped",type:"bool"}],internalType:"struct AutomationType.ClaimInfo",name:"info",type:"tuple"},{components:[{internalType:"uint256",name:"gasConsumed",type:"uint256"},{internalType:"uint256",name:"accountsClaimed",type:"uint256"},{internalType:"uint256",name:"valueLeft",type:"uint256"}],internalType:"struct AutomationType.ClaimResult",name:"result",type:"tuple"}],internalType:"struct AutomationType.MultiClaimInfo[]",name:"infos",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"member",type:"address"}],name:"getMemberMultiMintInfo",outputs:[{components:[{internalType:"uint256",name:"mintId",type:"uint256"},{components:[{internalType:"address",name:"member",type:"address"},{internalType:"uint256",name:"term",type:"uint256"},{internalType:"uint256",name:"maxGasPrice",type:"uint256"},{internalType:"uint256",name:"targetValue",type:"uint256"},{internalType:"uint256",name:"maxGasConsumedPerBatchMint",type:"uint256"},{internalType:"uint256",name:"claimId",type:"uint256"},{internalType:"bool",name:"stopped",type:"bool"}],internalType:"struct AutomationType.MintInfo",name:"info",type:"tuple"},{components:[{internalType:"uint256",name:"gasConsumed",type:"uint256"},{internalType:"uint256",name:"accountsMinted",type:"uint256"},{internalType:"uint256",name:"valueLeft",type:"uint256"}],internalType:"struct AutomationType.MintResult",name:"result",type:"tuple"}],internalType:"struct AutomationType.MultiMintInfo[]",name:"infos",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"globalClaimIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"globalMintIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_factory",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"isBot",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"joinFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"joinFeeReceived",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"minGasPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"mintId",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"mintInfo",outputs:[{internalType:"address",name:"member",type:"address"},{internalType:"uint256",name:"term",type:"uint256"},{internalType:"uint256",name:"maxGasPrice",type:"uint256"},{internalType:"uint256",name:"targetValue",type:"uint256"},{internalType:"uint256",name:"maxGasConsumedPerBatchMint",type:"uint256"},{internalType:"uint256",name:"claimId",type:"uint256"},{internalType:"bool",name:"stopped",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"mintResult",outputs:[{internalType:"uint256",name:"gasConsumed",type:"uint256"},{internalType:"uint256",name:"accountsMinted",type:"uint256"},{internalType:"uint256",name:"valueLeft",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"bot",type:"address"},{internalType:"uint256",name:"startValue",type:"uint256"}],name:"setBot",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"mintId",type:"uint256"},{internalType:"uint256",name:"maxGasPrice",type:"uint256"}],name:"setClaimMaxGasPrice",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newJoinFee",type:"uint256"}],name:"setJoinFee",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newMinGasPrice",type:"uint256"}],name:"setMinGasPrice",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"mintId",type:"uint256"},{internalType:"uint256",name:"maxGasPrice",type:"uint256"}],name:"setMintMaxGasPrice",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"mintId",type:"uint256"},{internalType:"uint256",name:"maxGasPrice",type:"uint256"}],name:"startClaimTask",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"term",type:"uint256"},{internalType:"uint256",name:"maxGasPrice",type:"uint256"}],name:"startMintTask",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"mintId",type:"uint256"}],name:"stopClaimTask",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"mintId",type:"uint256"}],name:"stopMintTask",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdrawJoinFee",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],i=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"batchId",type:"uint256"}],name:"BatchClaim",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"term",type:"uint256"},{indexed:!1,internalType:"uint256",name:"count",type:"uint256"},{indexed:!1,internalType:"uint256",name:"batchId",type:"uint256"}],name:"BatchMint",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"automation",type:"address"}],name:"SetAutomation",type:"event"},{inputs:[],name:"PROXY_FUNCTION",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"SECONDS_IN_DAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"SHARE_PCT",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"XEN_CLAIM_FUNCTION",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"XEN_MINT_FUNCTION",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"automation",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"bytecodeHash",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"batchId",type:"uint256"}],name:"claimBatch",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"batchId",type:"uint256"}],name:"getBatchInfo",outputs:[{components:[{internalType:"uint256",name:"batchId",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"},{internalType:"uint256",name:"unlockTime",type:"uint256"},{internalType:"bool",name:"claimed",type:"bool"}],internalType:"struct FactoryType.BatchInfo",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_xen",type:"address"},{internalType:"address",name:"_minterTemplate",type:"address"},{internalType:"address",name:"_automation",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"term",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"}],name:"mintBatch",outputs:[{internalType:"uint256",name:"batchId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"minterTemplate",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newAutomation",type:"address"}],name:"setAutomation",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"userBtachId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"xen",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}],s=[{inputs:[{internalType:"address",name:"factoryAddr",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"addressRewrds",outputs:[{internalType:"uint256",name:"rewards",type:"uint256"},{components:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"term",type:"uint256"},{internalType:"uint256",name:"maturityTs",type:"uint256"},{internalType:"uint256",name:"rank",type:"uint256"},{internalType:"uint256",name:"amplifier",type:"uint256"},{internalType:"uint256",name:"eaaRate",type:"uint256"}],internalType:"struct IXEN.MintInfo",name:"info",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"automation",outputs:[{internalType:"contract IAutomation",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"bytecodeHash",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"factory",outputs:[{internalType:"contract IFactory",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"batchId",type:"uint256"}],name:"getBatchAddresses",outputs:[{internalType:"address[]",name:"addresses",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"batchId",type:"uint256"}],name:"getBatchRewards",outputs:[{internalType:"uint256",name:"totalRewards",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"batchId",type:"uint256"}],name:"getBatchRewardsAndInfo",outputs:[{internalType:"uint256",name:"totalRewards",type:"uint256"},{components:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"term",type:"uint256"},{internalType:"uint256",name:"maturityTs",type:"uint256"},{internalType:"uint256",name:"rank",type:"uint256"},{internalType:"uint256",name:"rewards",type:"uint256"}],internalType:"struct RewardsCalculator.UserInfo[]",name:"userInfos",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"mintId",type:"uint256"}],name:"getMintRewards",outputs:[{internalType:"uint256",name:"totalRewards",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"mintId",type:"uint256"}],name:"getMintRewardsAndInfo",outputs:[{internalType:"uint256",name:"totalRewards",type:"uint256"},{components:[{internalType:"uint256",name:"batchId",type:"uint256"},{internalType:"uint256",name:"rewards",type:"uint256"}],internalType:"struct RewardsCalculator.BatchInfo[]",name:"binfos",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"mintId",type:"uint256"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"end",type:"uint256"}],name:"getMintRewardsAndInfoByIndex",outputs:[{internalType:"uint256",name:"totalCount",type:"uint256"},{internalType:"uint256",name:"totalRewards",type:"uint256"},{components:[{internalType:"uint256",name:"batchId",type:"uint256"},{internalType:"uint256",name:"rewards",type:"uint256"}],internalType:"struct RewardsCalculator.BatchInfo[]",name:"binfos",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"xen",outputs:[{internalType:"contract IXEN",name:"",type:"address"}],stateMutability:"view",type:"function"}],u=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"rewardAmount",type:"uint256"}],name:"MintClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"term",type:"uint256"},{indexed:!1,internalType:"uint256",name:"rank",type:"uint256"}],name:"RankClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"term",type:"uint256"}],name:"Staked",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"reward",type:"uint256"}],name:"Withdrawn",type:"event"},{inputs:[],name:"AUTHORS",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"DAYS_IN_YEAR",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"EAA_PM_START",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"EAA_PM_STEP",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"EAA_RANK_STEP",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"GENESIS_RANK",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"MAX_PENALTY_PCT",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"MAX_TERM_END",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"MAX_TERM_START",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"MIN_TERM",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"REWARD_AMPLIFIER_END",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"REWARD_AMPLIFIER_START",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"SECONDS_IN_DAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"TERM_AMPLIFIER",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"TERM_AMPLIFIER_THRESHOLD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"WITHDRAWAL_WINDOW_DAYS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"XEN_APY_DAYS_STEP",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"XEN_APY_END",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"XEN_APY_START",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"XEN_MIN_BURN",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"XEN_MIN_STAKE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"activeMinters",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"activeStakes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"claimMintReward",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"other",type:"address"},{internalType:"uint256",name:"pct",type:"uint256"}],name:"claimMintRewardAndShare",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"pct",type:"uint256"},{internalType:"uint256",name:"term",type:"uint256"}],name:"claimMintRewardAndStake",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"term",type:"uint256"}],name:"claimRank",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"genesisTs",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentAMP",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentAPY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentEAAR",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentMaxTerm",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"rankDelta",type:"uint256"},{internalType:"uint256",name:"amplifier",type:"uint256"},{internalType:"uint256",name:"term",type:"uint256"},{internalType:"uint256",name:"eaa",type:"uint256"}],name:"getGrossReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getUserMint",outputs:[{components:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"term",type:"uint256"},{internalType:"uint256",name:"maturityTs",type:"uint256"},{internalType:"uint256",name:"rank",type:"uint256"},{internalType:"uint256",name:"amplifier",type:"uint256"},{internalType:"uint256",name:"eaaRate",type:"uint256"}],internalType:"struct XENCrypto.MintInfo",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getUserStake",outputs:[{components:[{internalType:"uint256",name:"term",type:"uint256"},{internalType:"uint256",name:"maturityTs",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"apy",type:"uint256"}],internalType:"struct XENCrypto.StakeInfo",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"globalRank",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"term",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalXenStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"userBurns",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"userMints",outputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"term",type:"uint256"},{internalType:"uint256",name:"maturityTs",type:"uint256"},{internalType:"uint256",name:"rank",type:"uint256"},{internalType:"uint256",name:"amplifier",type:"uint256"},{internalType:"uint256",name:"eaaRate",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"userStakes",outputs:[{internalType:"uint256",name:"term",type:"uint256"},{internalType:"uint256",name:"maturityTs",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"apy",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}];var r=n(37804),p=n(61521),o=n(39447),l=n(27202),y=n(60499);const m=async function(t){const e=(0,r.q)();e.dApp=new p.CH(e.network.app,a,t),e.factoryApp=new p.CH(e.network.factory,i,t),e.rewardsApp=new p.CH(e.network.rewards,s,t),e.xenApp=new p.CH(e.network.xen,u,t),await f()},c=async function(){const t=(0,r.q)(),e=(0,y.IU)(t.dApp);if(void 0===e)return!1;try{t.mintPreGas=await e.GAS_USED_PER_BATCH_MINT(),t.claimPre=await e.GAS_USED_PER_BATCH_CLAIM()}catch(n){return!1}},d=async function(t,e,n){const a=(0,r.q)(),i=a.dApp;e=(0,l.c4)(e,9),n=(0,l.c4)(n,a.network.nativeCurrency.decimals);try{const a=await f();return n=a.add(n),await i.startMintTask(t,e,{value:n}),(0,y.IU)(i)}catch(s){throw await(0,l.Jg)(s),s}},f=async function(){const t=(0,r.q)(),e=(0,y.IU)(t.dApp);try{const n=await e.joinFee();return t.joinFee.big=n,t.joinFee.str=(0,l.sN)(n,5,t.network.nativeCurrency.decimals),n}catch(n){return(0,l.Jg)(n)}},b=async function(t){const e=(0,r.q)(),n=(0,y.IU)(e.dApp),a=e.network.nativeCurrency.decimals;let i={claim:{accountsClaimed:(0,l.c4)(0),have:!1,useNew:!0,status:"stop"}},s={},u=await n.mintInfo(t),p=await n.mintResult(t);const m=u.targetValue,c=p.gasConsumed,d=u.maxGasPrice,f=p.accountsMinted,b=u.claimId;s.days=u.term,i.mintId=t,i.claimId=b,o._Y.eq(b)||(i.claim=await T(b));const _=await n.claimedAccounts(t);if(i.claimed=_.add(i.claim.accountsClaimed),i.claimable="loading",u.stopped?f.eq(_)?(i.status="stop",i.claim.useNew=!1):i.status="claim":i.status="work",s.stopped=u.stopped,s.gasConsumed=p.gasConsumed,s.stopped?s.balance=0:s.balance=(0,l.sN)(m.sub(c),5,a),s.accountsMinted=f,s.targetValue=(0,l.sN)(m,5,a),s.maxGasPriceStr=(0,l.sN)(d,5,9),o._Y.eq(f))s.maxGasConsumedPerBatchMint=0;else{let t=100*(0,l.sN)(c.div(f),5,a);s.maxGasConsumedPerBatchMint=(0,l.Q0)(t,4)}return i.task=s,i},T=async function(t){const e=(0,r.q)(),n=(0,y.IU)(e.dApp),a=e.network.nativeCurrency.decimals;let i={accountsClaimed:(0,l.c4)(0),have:!0,useNew:!1},s=await n.claimInfo(t),u=await n.claimResult(t);const p=s.targetValue,m=u.gasConsumed,c=s.maxGasPrice,d=u.accountsClaimed;if(i.maxGasPriceStr=(0,l.sN)(c,5,9),i.stopped=s.stopped,i.gasConsumed=u.gasConsumed,o._Y.eq(d))i.maxGasConsumedPerBatchMint=0;else{let t=100*(0,l.sN)(m.div(d),6,a);i.maxGasConsumedPerBatchMint=(0,l.Q0)(t,6)}return i.stopped?i.balance=0:i.balance=(0,l.sN)(p.sub(m),5,a),s.stopped?(i.useNew=!0,i.status="stop"):i.status="work",i.accountsClaimed=u.accountsClaimed,i.stopIng=!1,i.targetValue=(0,l.sN)(p,5,a),i}},27202:(t,e,n)=>{"use strict";n.d(e,{Jc:()=>m,Jg:()=>T,MQ:()=>w,NC:()=>l,Q0:()=>f,Qm:()=>c,RI:()=>g,S$:()=>_,Wz:()=>h,c4:()=>b,sN:()=>d,vl:()=>o});n(18964);var a=n(98100),i=n.n(a),s=n(71856),u=n(68098),r=n(45783),p=n.n(r);const o=(t,e=4,n=4)=>{let a=t.substring(0,e)+"...";return a+=t.substring(t.length-n,t.length),a},l=t=>{const e=Number(t);return"0x"+e.toString(16)},y=i().mixin({toast:!0,position:"top-end",showConfirmButton:!1,timer:3e3,timerProgressBar:!0,didOpen:t=>{t.addEventListener("mouseenter",i().stopTimer),t.addEventListener("mouseleave",i().resumeTimer)}}),m=async function(t){await y.fire({icon:"error",text:t})},c=async function(t){await y.fire({icon:"success",text:t})},d=function(t,e=4,n=""){let a=s.formatEther(t);return""!==n&&(a=s.formatUnits(t,n)),e&&(a=f(a,e)),parseFloat(a)},f=function(t,e=4){const n=new RegExp("^(.*\\..{"+e+"}).*$");return String(t).replace(n,"$1")},b=function(t,e){return"string"!==typeof t&&(t=t.toString()),s.parseUnits(t,e)},T=async function(t){if("undefined"!==typeof t.data&&"undefined"!==typeof t.data.message)return void await m(t.data.message);if("undefined"!==typeof t.error&&"undefined"!==typeof t.error.data)return void await m(t.error.data.message);4001===t.code&&await m(t.message);const e=(0,u.r)(t);await m(e.context)},_=function(t){return""===t||null==t||(t=t.toString(),t=t.trim(),""===t)},w=function(t){const e=/^[0-9]*[.,]?[0-9]*$/;return e.test(t)},g=function(t){return t*=1e3,p()(t).format("D,M,YYYY h:mm A")},h=function(t){return t=p()(1e3*t),p()().isAfter(t)}},34080:(t,e,n)=>{"use strict";n.d(e,{Bv:()=>w,O$:()=>v,Uw:()=>d,gd:()=>T,oh:()=>f,sb:()=>b});var a=n(37804),i=n(9114),s=n(26950),u=n(84803),r=n.n(u),p=n(16172),o=n(27202),l=n(60499),y=n(99778),m=n(10275),c=n(17779);const d=[{chainId:66,rpcUrls:["https://exchainrpc.okex.org/"],chainName:"OKXChain Mainnet",name:"OKXChain",txUrl:"https://www.oklink.com/okexchain",nativeCurrency:{name:"OKT",decimals:18,symbol:"OKT"},blockExplorerUrls:["https://www.oklink.com/okexchain"],iconUrls:["images/okt.png"],app:"0x7996091604165cA3C5FBd45A69A141208BfC8F4d",factory:"0xf87d2770940035665983381DC4856fac2FbDc879",rewards:"0xd6885743EdbEe2B437E8FBBc71b872929B4E3241",xen:"0x1cC4D981e897A3D2E7785093A648c0a75fAd0453"},{chainId:137,rpcUrls:["https://polygon-rpc.com/"],chainName:"Polygon",name:"Polygon",txUrl:"https://polygonscan.com/tx/",nativeCurrency:{name:"MATIC",decimals:18,symbol:"MATIC"},blockExplorerUrls:["https://polygonscan.com/"],iconUrls:["images/matic.svg"],app:"0x97FAaB98f1A9E5C803C43a6293759FcC7eD000b9",factory:"0x8277AF4190DC617F46CF91054485688B142a5eD2",rewards:"0xD6177e0BB2C8746d6aa1D1184843593177dbc795",xen:"0x2AB0e9e4eE70FFf1fB9D67031E44F6410170d00e"},{chainId:250,rpcUrls:["https://rpc.fantom.network"],chainName:"Fantom",name:"Fantom",txUrl:"https://ftmscan.com/tx/",nativeCurrency:{name:"FTM",decimals:18,symbol:"FTM"},blockExplorerUrls:["https://ftmscan.com/"],iconUrls:["images/Fantom.png"],app:"0x97FAaB98f1A9E5C803C43a6293759FcC7eD000b9",factory:"0x8277AF4190DC617F46CF91054485688B142a5eD2",rewards:"0x3C5926D9b321A07145795539DCc819663Bc27c60",xen:"0xeF4B763385838FfFc708000f884026B8c0434275"},{chainId:10001,rpcUrls:["https://mainnet.ethereumpow.org"],chainName:"ETHW-mainnet",name:"ETHW",txUrl:"https://mainnet.ethwscan.com/tx/",nativeCurrency:{name:"ETHW",decimals:18,symbol:"ETHW"},blockExplorerUrls:["https://mainnet.ethwscan.com"],iconUrls:["images/ETHW-mainnet.png"],app:"0x97FAaB98f1A9E5C803C43a6293759FcC7eD000b9",factory:"0x8277AF4190DC617F46CF91054485688B142a5eD2",rewards:"0x3C5926D9b321A07145795539DCc819663Bc27c60",xen:"0x2AB0e9e4eE70FFf1fB9D67031E44F6410170d00e"},{chainId:56,rpcUrls:["https://bsc-dataseed.binance.org/"],chainName:"BNB Smart Chain (previously Binance Smart Chain Mainnet)",name:"BNB",txUrl:"https://bscscan.com/tx/",nativeCurrency:{name:"BNB",decimals:18,symbol:"BNB"},blockExplorerUrls:["https://bscscan.com/"],iconUrls:["images/bsc.svg"],app:"0x97FAaB98f1A9E5C803C43a6293759FcC7eD000b9",factory:"0x22bdbAe4A5779A35B97691D46ADe27573cAB4e60",rewards:"0x6c9ea99B328Db1E1823E4A8F4f5878fA9c1064e7",xen:"0x2AB0e9e4eE70FFf1fB9D67031E44F6410170d00e"}],f=async function(){const t={cacheProvider:!0,theme:"dark",providerOptions:{walletconnect:{package:m.Z,options:{rpc:{137:"https://polygon-rpc.com/",66:"https://exchainrpc.okex.org/",1001:"https://mainnet.ethereumpow.org",250:"https://rpc.fantom.network"}}}}};return i.Z.mode&&(t.theme="dark"),new(r())(t)},b=async function(){const t=(0,a.q)(),e=(0,l.IU)(t.provider);s.Z.show();try{const n=await e.getBalance(t.userAdd);return t.balance.big=n,t.balance.str=(0,o.sN)(n,5,t.network.nativeCurrency.decimals),await(0,y.iq)(),n}catch(n){c.log(n)}finally{s.Z.hide()}},T=async function(){const t=(0,a.q)();try{const e=await f(),n=await e.connect();s.Z.show(),t.web3Modal=n,n.ankr="6bfbbf0320b8cd87582657815c9bf39b13ce6212e539912429911c2ab0b68bcd";const a=new p.Q(n);t.provider=a;const i=(await a.getNetwork()).chainId;h(i),t.gas=(0,o.sN)(await a.getGasPrice(),3,9);const u=a.getSigner();t.signer=u,a.listAccounts().then((function(e){t.link=!0,t.userAdd=e[0],t.userAddStr=(0,o.vl)(e[0]),(0,y.pp)(u)})),n.on("accountsChanged",(function(n){n.length<=0?(_(),e.clearCachedProvider()):(t.userAdd=n[0],t.userAddStr=(0,o.vl)(n[0]))})),n.on("connect",(function(t){c.log(t)})),n.on("chainChanged",(function(t){h(Number(t),!0,!0,!0)})),n.on("disconnect",(()=>{t.$reset()}))}catch(e){c.log(e),t.$reset()}finally{s.Z.hide()}},_=function(){const t=(0,a.q)();t.$reset(),f().then((function(t){t.clearCachedProvider()}))},w=async function(t){const e=(0,a.q)();let n=e.network.chainId;t&&(n=t);let i=(0,l.IU)(e.provider);i=i.provider,e.netErr=!0;try{await i.request({method:"wallet_switchEthereumChain",params:[{chainId:(0,o.NC)(n)}]}),localStorage.setItem("chain",String(n)),location.reload()}catch(s){if(4902===s.code)return g(n);c.log(s),await(0,o.Jg)(s)}},g=async function(t){const e=(0,a.q)();let n=(0,l.IU)(e.provider);n=n.provider,d.forEach((function(e){if(e.chainId===t){const t={chainId:(0,o.NC)(e.chainId),rpcUrls:e.rpcUrls,chainName:e.chainName,nativeCurrency:e.nativeCurrency,blockExplorerUrls:e.blockExplorerUrls,iconUrls:e.iconUrls};n.request({method:"wallet_addEthereumChain",params:[t]}).then((function(){w()}),(function(){(0,o.Jc)("添加网络失败")}))}}))},h=function(t,e=!0,n=!0,i=!1){const s=(0,a.q)();for(const a of d)if(a.chainId===t)return n&&(s.network=a,i&&location.reload()),a;return e&&(s.netErr=!0),!1},v=function(t){const e=(0,a.q)(),n=e.balance.big,i=e.network.nativeCurrency.decimals;return!(void 0===t||!(0,o.MQ)(t)||(0,o.S$)(t))&&!(n.lte(0)||n.lt((0,o.c4)(t,i)))}},36563:()=>{},46601:()=>{},89214:()=>{},85568:()=>{},40127:()=>{},27790:()=>{},52361:()=>{},94616:()=>{}},e={};function n(a){var i=e[a];if(void 0!==i)return i.exports;var s=e[a]={id:a,loaded:!1,exports:{}};return t[a].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.m=t,(()=>{n.amdO={}})(),(()=>{var t=[];n.O=(e,a,i,s)=>{if(!a){var u=1/0;for(l=0;l<t.length;l++){for(var[a,i,s]=t[l],r=!0,p=0;p<a.length;p++)(!1&s||u>=s)&&Object.keys(n.O).every((t=>n.O[t](a[p])))?a.splice(p--,1):(r=!1,s<u&&(u=s));if(r){t.splice(l--,1);var o=i();void 0!==o&&(e=o)}}return e}s=s||0;for(var l=t.length;l>0&&t[l-1][2]>s;l--)t[l]=t[l-1];t[l]=[a,i,s]}})(),(()=>{n.n=t=>{var e=t&&t.__esModule?()=>t["default"]:()=>t;return n.d(e,{a:e}),e}})(),(()=>{n.d=(t,e)=>{for(var a in e)n.o(e,a)&&!n.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})}})(),(()=>{n.f={},n.e=t=>Promise.all(Object.keys(n.f).reduce(((e,a)=>(n.f[a](t,e),e)),[]))})(),(()=>{n.u=t=>"js/"+t+"."+{160:"c097a0d0",557:"2db55ee9",672:"d1a0563a",984:"c031b231"}[t]+".js"})(),(()=>{n.miniCssF=t=>"css/"+({143:"app",736:"vendor"}[t]||t)+"."+{143:"e95ddb4f",672:"7c79d5a5",736:"d32ceab1"}[t]+".css"})(),(()=>{n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"===typeof window)return window}}()})(),(()=>{n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e)})(),(()=>{var t={},e="casting:";n.l=(a,i,s,u)=>{if(t[a])t[a].push(i);else{var r,p;if(void 0!==s)for(var o=document.getElementsByTagName("script"),l=0;l<o.length;l++){var y=o[l];if(y.getAttribute("src")==a||y.getAttribute("data-webpack")==e+s){r=y;break}}r||(p=!0,r=document.createElement("script"),r.charset="utf-8",r.timeout=120,n.nc&&r.setAttribute("nonce",n.nc),r.setAttribute("data-webpack",e+s),r.src=a),t[a]=[i];var m=(e,n)=>{r.onerror=r.onload=null,clearTimeout(c);var i=t[a];if(delete t[a],r.parentNode&&r.parentNode.removeChild(r),i&&i.forEach((t=>t(n))),e)return e(n)},c=setTimeout(m.bind(null,void 0,{type:"timeout",target:r}),12e4);r.onerror=m.bind(null,r.onerror),r.onload=m.bind(null,r.onload),p&&document.head.appendChild(r)}}})(),(()=>{n.r=t=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}})(),(()=>{n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t)})(),(()=>{n.p="/"})(),(()=>{var t=(t,e,n,a)=>{var i=document.createElement("link");i.rel="stylesheet",i.type="text/css";var s=s=>{if(i.onerror=i.onload=null,"load"===s.type)n();else{var u=s&&("load"===s.type?"missing":s.type),r=s&&s.target&&s.target.href||e,p=new Error("Loading CSS chunk "+t+" failed.\n("+r+")");p.code="CSS_CHUNK_LOAD_FAILED",p.type=u,p.request=r,i.parentNode.removeChild(i),a(p)}};return i.onerror=i.onload=s,i.href=e,document.head.appendChild(i),i},e=(t,e)=>{for(var n=document.getElementsByTagName("link"),a=0;a<n.length;a++){var i=n[a],s=i.getAttribute("data-href")||i.getAttribute("href");if("stylesheet"===i.rel&&(s===t||s===e))return i}var u=document.getElementsByTagName("style");for(a=0;a<u.length;a++){i=u[a],s=i.getAttribute("data-href");if(s===t||s===e)return i}},a=a=>new Promise(((i,s)=>{var u=n.miniCssF(a),r=n.p+u;if(e(u,r))return i();t(a,r,i,s)})),i={143:0};n.f.miniCss=(t,e)=>{var n={672:1};i[t]?e.push(i[t]):0!==i[t]&&n[t]&&e.push(i[t]=a(t).then((()=>{i[t]=0}),(e=>{throw delete i[t],e})))}})(),(()=>{var t={143:0};n.f.j=(e,a)=>{var i=n.o(t,e)?t[e]:void 0;if(0!==i)if(i)a.push(i[2]);else{var s=new Promise(((n,a)=>i=t[e]=[n,a]));a.push(i[2]=s);var u=n.p+n.u(e),r=new Error,p=a=>{if(n.o(t,e)&&(i=t[e],0!==i&&(t[e]=void 0),i)){var s=a&&("load"===a.type?"missing":a.type),u=a&&a.target&&a.target.src;r.message="Loading chunk "+e+" failed.\n("+s+": "+u+")",r.name="ChunkLoadError",r.type=s,r.request=u,i[1](r)}};n.l(u,p,"chunk-"+e,e)}},n.O.j=e=>0===t[e];var e=(e,a)=>{var i,s,[u,r,p]=a,o=0;if(u.some((e=>0!==t[e]))){for(i in r)n.o(r,i)&&(n.m[i]=r[i]);if(p)var l=p(n)}for(e&&e(a);o<u.length;o++)s=u[o],n.o(t,s)&&t[s]&&t[s][0](),t[s]=0;return n.O(l)},a=globalThis["webpackChunkcasting"]=globalThis["webpackChunkcasting"]||[];a.forEach(e.bind(null,0)),a.push=e.bind(null,a.push.bind(a))})();var a=n.O(void 0,[736],(()=>n(20008)));a=n.O(a)})();